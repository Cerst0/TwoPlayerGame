//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.3.0
//     from Assets/Other/InputManager.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @InputManager : IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @InputManager()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""InputManager"",
    ""maps"": [
        {
            ""name"": ""Player"",
            ""id"": ""3d5867cc-0516-4a1e-894e-1a7cfa25f617"",
            ""actions"": [
                {
                    ""name"": ""UpBlue"",
                    ""type"": ""Button"",
                    ""id"": ""5bce4cef-c325-4157-9294-0b716372ddb8"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""DownBlue"",
                    ""type"": ""Button"",
                    ""id"": ""f9152074-329a-4391-9928-f14977a55113"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""RightBlue"",
                    ""type"": ""Button"",
                    ""id"": ""10320cc6-88dc-4fe3-9a7a-ea9fbfdde88b"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""LeftBlue"",
                    ""type"": ""Button"",
                    ""id"": ""9cc492f2-ae48-4b9c-b872-e8597a73f4e2"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""UpRed"",
                    ""type"": ""Button"",
                    ""id"": ""66b88741-8dd6-4c85-a23f-a6cccc1fa4a0"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""DownRed"",
                    ""type"": ""Button"",
                    ""id"": ""bee2c5b4-d824-443f-85d3-e9b3e16c9a3e"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""RightRed"",
                    ""type"": ""Button"",
                    ""id"": ""68b852cd-0fba-4456-96df-70be0e40d398"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""LeftRed"",
                    ""type"": ""Button"",
                    ""id"": ""88c0ea6f-ca0f-4734-ae1c-ae61c289f738"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Enter"",
                    ""type"": ""Button"",
                    ""id"": ""66c20320-eac3-44fb-bcc7-a033538a0d45"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Entertwo"",
                    ""type"": ""Button"",
                    ""id"": ""e1d68e7b-0906-4c30-b1af-d7975563352f"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Esc"",
                    ""type"": ""Button"",
                    ""id"": ""9f5ba5d8-8fb0-4f77-820f-f80f348b2cb4"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Esctwo"",
                    ""type"": ""Button"",
                    ""id"": ""c9b5d9bd-16ab-4220-b5e6-75a770e6e9ed"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Click"",
                    ""type"": ""Button"",
                    ""id"": ""74e476d3-92c3-4ce7-8d6b-10da716b7d1d"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""322e51d0-d672-4332-96bd-3e47e4a17f01"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""UpBlue"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""ef4b7a73-8f2b-468c-a142-8db36e502fbf"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""DownBlue"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""89d3f613-a192-4726-a25e-1583dc51777f"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""RightBlue"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""6ada92f6-3183-4972-b9f8-9c921cb51959"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""LeftBlue"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""5a863cf5-bb62-44b2-a64c-46041b51f1f9"",
                    ""path"": ""<Keyboard>/upArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""UpRed"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""d3ff972d-af03-4468-89aa-68ac33d3e64c"",
                    ""path"": ""<Keyboard>/downArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""DownRed"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""82c8cf13-0007-4f3e-8335-d51caf22570a"",
                    ""path"": ""<Keyboard>/rightArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""RightRed"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""55496032-061b-45a9-9c07-c362f09bc1a9"",
                    ""path"": ""<Keyboard>/leftArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""LeftRed"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""cb12660f-a178-486f-a592-b781bb9ca2f9"",
                    ""path"": ""<Keyboard>/enter"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Enter"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""43e08d2c-9298-463e-9607-d542afab57c9"",
                    ""path"": ""<Keyboard>/space"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Entertwo"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""5f090736-2655-4c9e-818b-1845187f64c2"",
                    ""path"": ""<Keyboard>/escape"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Esc"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""0b4d03fd-16f9-4f40-9558-9abd03ea0d33"",
                    ""path"": ""<Keyboard>/backspace"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Esctwo"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""b48c6d5e-da11-4667-8b9b-5379ee16a07c"",
                    ""path"": ""<Mouse>/leftButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Click"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": []
}");
        // Player
        m_Player = asset.FindActionMap("Player", throwIfNotFound: true);
        m_Player_UpBlue = m_Player.FindAction("UpBlue", throwIfNotFound: true);
        m_Player_DownBlue = m_Player.FindAction("DownBlue", throwIfNotFound: true);
        m_Player_RightBlue = m_Player.FindAction("RightBlue", throwIfNotFound: true);
        m_Player_LeftBlue = m_Player.FindAction("LeftBlue", throwIfNotFound: true);
        m_Player_UpRed = m_Player.FindAction("UpRed", throwIfNotFound: true);
        m_Player_DownRed = m_Player.FindAction("DownRed", throwIfNotFound: true);
        m_Player_RightRed = m_Player.FindAction("RightRed", throwIfNotFound: true);
        m_Player_LeftRed = m_Player.FindAction("LeftRed", throwIfNotFound: true);
        m_Player_Enter = m_Player.FindAction("Enter", throwIfNotFound: true);
        m_Player_Entertwo = m_Player.FindAction("Entertwo", throwIfNotFound: true);
        m_Player_Esc = m_Player.FindAction("Esc", throwIfNotFound: true);
        m_Player_Esctwo = m_Player.FindAction("Esctwo", throwIfNotFound: true);
        m_Player_Click = m_Player.FindAction("Click", throwIfNotFound: true);
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }
    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }
    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // Player
    private readonly InputActionMap m_Player;
    private IPlayerActions m_PlayerActionsCallbackInterface;
    private readonly InputAction m_Player_UpBlue;
    private readonly InputAction m_Player_DownBlue;
    private readonly InputAction m_Player_RightBlue;
    private readonly InputAction m_Player_LeftBlue;
    private readonly InputAction m_Player_UpRed;
    private readonly InputAction m_Player_DownRed;
    private readonly InputAction m_Player_RightRed;
    private readonly InputAction m_Player_LeftRed;
    private readonly InputAction m_Player_Enter;
    private readonly InputAction m_Player_Entertwo;
    private readonly InputAction m_Player_Esc;
    private readonly InputAction m_Player_Esctwo;
    private readonly InputAction m_Player_Click;
    public struct PlayerActions
    {
        private @InputManager m_Wrapper;
        public PlayerActions(@InputManager wrapper) { m_Wrapper = wrapper; }
        public InputAction @UpBlue => m_Wrapper.m_Player_UpBlue;
        public InputAction @DownBlue => m_Wrapper.m_Player_DownBlue;
        public InputAction @RightBlue => m_Wrapper.m_Player_RightBlue;
        public InputAction @LeftBlue => m_Wrapper.m_Player_LeftBlue;
        public InputAction @UpRed => m_Wrapper.m_Player_UpRed;
        public InputAction @DownRed => m_Wrapper.m_Player_DownRed;
        public InputAction @RightRed => m_Wrapper.m_Player_RightRed;
        public InputAction @LeftRed => m_Wrapper.m_Player_LeftRed;
        public InputAction @Enter => m_Wrapper.m_Player_Enter;
        public InputAction @Entertwo => m_Wrapper.m_Player_Entertwo;
        public InputAction @Esc => m_Wrapper.m_Player_Esc;
        public InputAction @Esctwo => m_Wrapper.m_Player_Esctwo;
        public InputAction @Click => m_Wrapper.m_Player_Click;
        public InputActionMap Get() { return m_Wrapper.m_Player; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(PlayerActions set) { return set.Get(); }
        public void SetCallbacks(IPlayerActions instance)
        {
            if (m_Wrapper.m_PlayerActionsCallbackInterface != null)
            {
                @UpBlue.started -= m_Wrapper.m_PlayerActionsCallbackInterface.OnUpBlue;
                @UpBlue.performed -= m_Wrapper.m_PlayerActionsCallbackInterface.OnUpBlue;
                @UpBlue.canceled -= m_Wrapper.m_PlayerActionsCallbackInterface.OnUpBlue;
                @DownBlue.started -= m_Wrapper.m_PlayerActionsCallbackInterface.OnDownBlue;
                @DownBlue.performed -= m_Wrapper.m_PlayerActionsCallbackInterface.OnDownBlue;
                @DownBlue.canceled -= m_Wrapper.m_PlayerActionsCallbackInterface.OnDownBlue;
                @RightBlue.started -= m_Wrapper.m_PlayerActionsCallbackInterface.OnRightBlue;
                @RightBlue.performed -= m_Wrapper.m_PlayerActionsCallbackInterface.OnRightBlue;
                @RightBlue.canceled -= m_Wrapper.m_PlayerActionsCallbackInterface.OnRightBlue;
                @LeftBlue.started -= m_Wrapper.m_PlayerActionsCallbackInterface.OnLeftBlue;
                @LeftBlue.performed -= m_Wrapper.m_PlayerActionsCallbackInterface.OnLeftBlue;
                @LeftBlue.canceled -= m_Wrapper.m_PlayerActionsCallbackInterface.OnLeftBlue;
                @UpRed.started -= m_Wrapper.m_PlayerActionsCallbackInterface.OnUpRed;
                @UpRed.performed -= m_Wrapper.m_PlayerActionsCallbackInterface.OnUpRed;
                @UpRed.canceled -= m_Wrapper.m_PlayerActionsCallbackInterface.OnUpRed;
                @DownRed.started -= m_Wrapper.m_PlayerActionsCallbackInterface.OnDownRed;
                @DownRed.performed -= m_Wrapper.m_PlayerActionsCallbackInterface.OnDownRed;
                @DownRed.canceled -= m_Wrapper.m_PlayerActionsCallbackInterface.OnDownRed;
                @RightRed.started -= m_Wrapper.m_PlayerActionsCallbackInterface.OnRightRed;
                @RightRed.performed -= m_Wrapper.m_PlayerActionsCallbackInterface.OnRightRed;
                @RightRed.canceled -= m_Wrapper.m_PlayerActionsCallbackInterface.OnRightRed;
                @LeftRed.started -= m_Wrapper.m_PlayerActionsCallbackInterface.OnLeftRed;
                @LeftRed.performed -= m_Wrapper.m_PlayerActionsCallbackInterface.OnLeftRed;
                @LeftRed.canceled -= m_Wrapper.m_PlayerActionsCallbackInterface.OnLeftRed;
                @Enter.started -= m_Wrapper.m_PlayerActionsCallbackInterface.OnEnter;
                @Enter.performed -= m_Wrapper.m_PlayerActionsCallbackInterface.OnEnter;
                @Enter.canceled -= m_Wrapper.m_PlayerActionsCallbackInterface.OnEnter;
                @Entertwo.started -= m_Wrapper.m_PlayerActionsCallbackInterface.OnEntertwo;
                @Entertwo.performed -= m_Wrapper.m_PlayerActionsCallbackInterface.OnEntertwo;
                @Entertwo.canceled -= m_Wrapper.m_PlayerActionsCallbackInterface.OnEntertwo;
                @Esc.started -= m_Wrapper.m_PlayerActionsCallbackInterface.OnEsc;
                @Esc.performed -= m_Wrapper.m_PlayerActionsCallbackInterface.OnEsc;
                @Esc.canceled -= m_Wrapper.m_PlayerActionsCallbackInterface.OnEsc;
                @Esctwo.started -= m_Wrapper.m_PlayerActionsCallbackInterface.OnEsctwo;
                @Esctwo.performed -= m_Wrapper.m_PlayerActionsCallbackInterface.OnEsctwo;
                @Esctwo.canceled -= m_Wrapper.m_PlayerActionsCallbackInterface.OnEsctwo;
                @Click.started -= m_Wrapper.m_PlayerActionsCallbackInterface.OnClick;
                @Click.performed -= m_Wrapper.m_PlayerActionsCallbackInterface.OnClick;
                @Click.canceled -= m_Wrapper.m_PlayerActionsCallbackInterface.OnClick;
            }
            m_Wrapper.m_PlayerActionsCallbackInterface = instance;
            if (instance != null)
            {
                @UpBlue.started += instance.OnUpBlue;
                @UpBlue.performed += instance.OnUpBlue;
                @UpBlue.canceled += instance.OnUpBlue;
                @DownBlue.started += instance.OnDownBlue;
                @DownBlue.performed += instance.OnDownBlue;
                @DownBlue.canceled += instance.OnDownBlue;
                @RightBlue.started += instance.OnRightBlue;
                @RightBlue.performed += instance.OnRightBlue;
                @RightBlue.canceled += instance.OnRightBlue;
                @LeftBlue.started += instance.OnLeftBlue;
                @LeftBlue.performed += instance.OnLeftBlue;
                @LeftBlue.canceled += instance.OnLeftBlue;
                @UpRed.started += instance.OnUpRed;
                @UpRed.performed += instance.OnUpRed;
                @UpRed.canceled += instance.OnUpRed;
                @DownRed.started += instance.OnDownRed;
                @DownRed.performed += instance.OnDownRed;
                @DownRed.canceled += instance.OnDownRed;
                @RightRed.started += instance.OnRightRed;
                @RightRed.performed += instance.OnRightRed;
                @RightRed.canceled += instance.OnRightRed;
                @LeftRed.started += instance.OnLeftRed;
                @LeftRed.performed += instance.OnLeftRed;
                @LeftRed.canceled += instance.OnLeftRed;
                @Enter.started += instance.OnEnter;
                @Enter.performed += instance.OnEnter;
                @Enter.canceled += instance.OnEnter;
                @Entertwo.started += instance.OnEntertwo;
                @Entertwo.performed += instance.OnEntertwo;
                @Entertwo.canceled += instance.OnEntertwo;
                @Esc.started += instance.OnEsc;
                @Esc.performed += instance.OnEsc;
                @Esc.canceled += instance.OnEsc;
                @Esctwo.started += instance.OnEsctwo;
                @Esctwo.performed += instance.OnEsctwo;
                @Esctwo.canceled += instance.OnEsctwo;
                @Click.started += instance.OnClick;
                @Click.performed += instance.OnClick;
                @Click.canceled += instance.OnClick;
            }
        }
    }
    public PlayerActions @Player => new PlayerActions(this);
    public interface IPlayerActions
    {
        void OnUpBlue(InputAction.CallbackContext context);
        void OnDownBlue(InputAction.CallbackContext context);
        void OnRightBlue(InputAction.CallbackContext context);
        void OnLeftBlue(InputAction.CallbackContext context);
        void OnUpRed(InputAction.CallbackContext context);
        void OnDownRed(InputAction.CallbackContext context);
        void OnRightRed(InputAction.CallbackContext context);
        void OnLeftRed(InputAction.CallbackContext context);
        void OnEnter(InputAction.CallbackContext context);
        void OnEntertwo(InputAction.CallbackContext context);
        void OnEsc(InputAction.CallbackContext context);
        void OnEsctwo(InputAction.CallbackContext context);
        void OnClick(InputAction.CallbackContext context);
    }
}
